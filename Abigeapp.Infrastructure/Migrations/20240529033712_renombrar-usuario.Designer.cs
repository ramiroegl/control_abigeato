// <auto-generated />
using System;
using Abigeapp.Infrastructure.Compartido;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Abigeapp.Infrastructure.Migrations
{
    [DbContext(typeof(BaseDeDatos))]
    [Migration("20240529033712_renombrar-usuario")]
    partial class renombrarusuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Abigeapp.Domain.Dispositivos.Alerta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("DispositivoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Latitud")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Longitud")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("DispositivoId");

                    b.ToTable("Alertas");
                });

            modelBuilder.Entity("Abigeapp.Domain.Dispositivos.Dispositivo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Latitud")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Longitud")
                        .HasColumnType("numeric");

                    b.Property<Guid>("PerimetroId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PerimetroId");

                    b.ToTable("Dispositivos");
                });

            modelBuilder.Entity("Abigeapp.Domain.Fincas.Coordenada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Latitud")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Longitud")
                        .HasColumnType("numeric");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.Property<Guid>("PerimetroId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PerimetroId");

                    b.ToTable("Coordenadas");
                });

            modelBuilder.Entity("Abigeapp.Domain.Fincas.Finca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Latitud")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Longitud")
                        .HasColumnType("numeric");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Fincas");
                });

            modelBuilder.Entity("Abigeapp.Domain.Fincas.Perimetro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FincaId")
                        .HasColumnType("uuid");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FincaId");

                    b.ToTable("Perimetros");
                });

            modelBuilder.Entity("Abigeapp.Domain.Usuarios.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FincaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FincaId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Abigeapp.Domain.Dispositivos.Alerta", b =>
                {
                    b.HasOne("Abigeapp.Domain.Dispositivos.Dispositivo", "Dispositivo")
                        .WithMany("Alertas")
                        .HasForeignKey("DispositivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dispositivo");
                });

            modelBuilder.Entity("Abigeapp.Domain.Dispositivos.Dispositivo", b =>
                {
                    b.HasOne("Abigeapp.Domain.Fincas.Perimetro", "Perimetro")
                        .WithMany()
                        .HasForeignKey("PerimetroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perimetro");
                });

            modelBuilder.Entity("Abigeapp.Domain.Fincas.Coordenada", b =>
                {
                    b.HasOne("Abigeapp.Domain.Fincas.Perimetro", "Perimetro")
                        .WithMany("Coordenadas")
                        .HasForeignKey("PerimetroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perimetro");
                });

            modelBuilder.Entity("Abigeapp.Domain.Fincas.Perimetro", b =>
                {
                    b.HasOne("Abigeapp.Domain.Fincas.Finca", "Finca")
                        .WithMany("Perimetros")
                        .HasForeignKey("FincaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Finca");
                });

            modelBuilder.Entity("Abigeapp.Domain.Usuarios.Usuario", b =>
                {
                    b.HasOne("Abigeapp.Domain.Fincas.Finca", "Finca")
                        .WithMany("Usuarios")
                        .HasForeignKey("FincaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Finca");
                });

            modelBuilder.Entity("Abigeapp.Domain.Dispositivos.Dispositivo", b =>
                {
                    b.Navigation("Alertas");
                });

            modelBuilder.Entity("Abigeapp.Domain.Fincas.Finca", b =>
                {
                    b.Navigation("Perimetros");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Abigeapp.Domain.Fincas.Perimetro", b =>
                {
                    b.Navigation("Coordenadas");
                });
#pragma warning restore 612, 618
        }
    }
}
